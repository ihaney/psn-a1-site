{"version":3,"file":"ProductsPage-CrltMV5-.js","sources":["../../../src/hooks/useProducts.ts","../../../src/pages/ProductsPage.tsx"],"sourcesContent":["import { useInfiniteQuery } from '@tanstack/react-query';\nimport { supabase } from '../lib/supabase';\nimport type { Product } from '../types';\n\nconst PRODUCTS_PER_PAGE = 100;\n\nexport function useProducts() {\n  return useInfiniteQuery({\n    queryKey: ['products'],\n    queryFn: async ({ pageParam = 0 }) => {\n      const from = pageParam * PRODUCTS_PER_PAGE;\n      const to = from + PRODUCTS_PER_PAGE - 1;\n\n      try {\n        console.log(`Fetching products page ${pageParam + 1} (items ${from + 1}-${to + 1})`);\n        \n        // Get products with count for pagination\n        const { data, error, count } = await supabase\n          .from('Products')\n          .select('*', { count: 'exact' })\n          .range(from, to)\n          .order('Product_ID');\n\n        if (error) {\n          console.error('Supabase error:', error);\n          throw error;\n        }\n\n        // Ensure data is always an array\n        const safeData = Array.isArray(data) ? data : [];\n        console.log(`Fetched ${safeData.length} products for page ${pageParam + 1}`);\n\n        const products = safeData.map(product => ({\n          id: product.Product_ID,\n          name: product.Product_Title || 'Untitled Product',\n          Product_Price: product.Product_Price || '$0',\n          image: product.Product_Image_URL || '',\n          country: product.Product_Country_Name || 'Unknown',\n          category: product.Product_Category_Name || 'Unknown',\n          supplier: product.Product_Supplier_Name || 'Unknown',\n          Product_MOQ: product.Product_MOQ || '0',\n          sourceUrl: product.Product_URL || '',\n          marketplace: product.Product_Source_Name || 'Unknown'\n        }));\n\n        // Calculate if there's a next page\n        const totalItems = count || 0;\n        const currentItemsLoaded = (pageParam + 1) * PRODUCTS_PER_PAGE;\n        const hasMore = currentItemsLoaded < totalItems;\n\n        console.log(`Page ${pageParam + 1}: ${products.length} items, ${currentItemsLoaded}/${totalItems} total loaded, hasMore: ${hasMore}`);\n\n        return {\n          data: products,\n          nextPage: hasMore ? pageParam + 1 : undefined,\n          totalCount: totalItems,\n          hasMore\n        };\n      } catch (error) {\n        console.error('Query function error:', error);\n        throw error;\n      }\n    },\n    getNextPageParam: (lastPage) => {\n      return lastPage.hasMore ? lastPage.nextPage : undefined;\n    },\n    staleTime: 1000 * 60 * 5, // 5 minutes\n  });\n}","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Factory, Zap, Shirt, Package } from 'lucide-react';\nimport SEO from '../components/SEO';\nimport ProductCard from '../components/ProductCard';\nimport { useProducts } from '../hooks/useProducts';\nimport StandardFilters from '../components/StandardFilters';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { supabase } from '../lib/supabase';\n\ninterface FeaturedCategory {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  description: string;\n}\n\ninterface FilterGroup {\n  title: string;\n  options: FilterOption[];\n  selected: string[];\n}\n\ninterface FilterOption {\n  id: string;\n  title: string;\n  count: number;\n}\n\nexport default function ProductsPage() {\n  const navigate = useNavigate();\n  const { \n    data, \n    isLoading, \n    fetchNextPage, \n    hasNextPage, \n    isFetchingNextPage,\n    error \n  } = useProducts();\n  \n  const [sortBy, setSortBy] = useState('');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\n  const [activeDropdown, setActiveDropdown] = useState<string | null>(null);\n  const [featuredCategories, setFeaturedCategories] = useState<FeaturedCategory[]>([]);\n  const [filters, setFilters] = useState<{\n    categories: FilterGroup;\n    suppliers: FilterGroup;\n    sources: FilterGroup;\n    countries: FilterGroup;\n  }>({\n    categories: { title: 'Categories', options: [], selected: [] },\n    suppliers: { title: 'Suppliers', options: [], selected: [] },\n    sources: { title: 'Sources', options: [], selected: [] },\n    countries: { title: 'Countries', options: [], selected: [] }\n  });\n\n  // Ref for infinite scroll sentinel\n  const sentinelRef = useRef<HTMLDivElement>(null);\n\n  // Flatten all products from all pages\n  const allProducts = data?.pages?.flatMap(page => page?.data || []) || [];\n  const totalCount = data?.pages?.[0]?.totalCount || 0;\n\n  // Infinite scroll implementation\n  const handleIntersection = useCallback((entries: IntersectionObserverEntry[]) => {\n    const [entry] = entries;\n    if (entry.isIntersecting && hasNextPage && !isFetchingNextPage) {\n      fetchNextPage();\n    }\n  }, [fetchNextPage, hasNextPage, isFetchingNextPage]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 0.1,\n      rootMargin: '100px'\n    });\n\n    if (sentinelRef.current) {\n      observer.observe(sentinelRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, [handleIntersection]);\n\n  // Set up featured categories with the requested names and icons\n  useEffect(() => {\n    setFeaturedCategories([\n      {\n        id: 'industrial-tools',\n        name: 'Industrial Tools & Equipment',\n        icon: <Factory className=\"w-12 h-12 text-[#F4A024]\" />,\n        description: 'Professional tools and industrial equipment for manufacturing and construction'\n      },\n      {\n        id: 'electronics',\n        name: 'Electronics',\n        icon: <Zap className=\"w-12 h-12 text-[#F4A024]\" />,\n        description: 'Electronic components, devices, and technology solutions'\n      },\n      {\n        id: 'apparel-textiles',\n        name: 'Apparel & Textiles',\n        icon: <Shirt className=\"w-12 h-12 text-[#F4A024]\" />,\n        description: 'Clothing, fabrics, and textile products for various applications'\n      },\n      {\n        id: 'logistics-packaging',\n        name: 'Logistics & Packaging Solutions',\n        icon: <Package className=\"w-12 h-12 text-[#F4A024]\" />,\n        description: 'Packaging materials, shipping solutions, and logistics services'\n      }\n    ]);\n  }, []);\n\n  // Fetch filter options\n  useEffect(() => {\n    async function fetchFilterOptions() {\n      const [categoriesData, suppliersData, sourcesData, countriesData] = await Promise.all([\n        supabase.from('Categories').select('Category_ID, Category_Name').order('Category_Name'),\n        supabase.from('Supplier').select('Supplier_ID, Supplier_Title').order('Supplier_Title'),\n        supabase.from('Sources').select('Source_ID, Source_Title').order('Source_Title'),\n        supabase.from('Countries').select('Country_ID, Country_Title').order('Country_Title')\n      ]);\n\n      if (categoriesData.data) {\n        setFilters(prev => ({\n          ...prev,\n          categories: {\n            ...prev.categories,\n            options: categoriesData.data.map(c => ({\n              id: c.Category_ID,\n              title: c.Category_Name,\n              count: 0\n            }))\n          }\n        }));\n      }\n\n      if (suppliersData.data) {\n        setFilters(prev => ({\n          ...prev,\n          suppliers: {\n            ...prev.suppliers,\n            options: suppliersData.data.map(s => ({\n              id: s.Supplier_ID,\n              title: s.Supplier_Title,\n              count: 0\n            }))\n          }\n        }));\n      }\n\n      if (sourcesData.data) {\n        setFilters(prev => ({\n          ...prev,\n          sources: {\n            ...prev.sources,\n            options: sourcesData.data.map(s => ({\n              id: s.Source_ID,\n              title: s.Source_Title,\n              count: 0\n            }))\n          }\n        }));\n      }\n\n      if (countriesData.data) {\n        setFilters(prev => ({\n          ...prev,\n          countries: {\n            ...prev.countries,\n            options: countriesData.data.map(c => ({\n              id: c.Country_ID,\n              title: c.Country_Title,\n              count: 0\n            }))\n          }\n        }));\n      }\n    }\n\n    fetchFilterOptions();\n  }, []);\n\n  // Update filter counts\n  useEffect(() => {\n    const categoryCounts = new Map();\n    const supplierCounts = new Map();\n    const sourceCounts = new Map();\n    const countryCounts = new Map();\n\n    allProducts.forEach(product => {\n      categoryCounts.set(product.category, (categoryCounts.get(product.category) || 0) + 1);\n      supplierCounts.set(product.supplier, (supplierCounts.get(product.supplier) || 0) + 1);\n      sourceCounts.set(product.marketplace, (sourceCounts.get(product.marketplace) || 0) + 1);\n      countryCounts.set(product.country, (countryCounts.get(product.country) || 0) + 1);\n    });\n\n    setFilters(prev => ({\n      categories: {\n        ...prev.categories,\n        options: prev.categories.options.map(opt => ({\n          ...opt,\n          count: categoryCounts.get(opt.title) || 0\n        }))\n      },\n      suppliers: {\n        ...prev.suppliers,\n        options: prev.suppliers.options.map(opt => ({\n          ...opt,\n          count: supplierCounts.get(opt.title) || 0\n        }))\n      },\n      sources: {\n        ...prev.sources,\n        options: prev.sources.options.map(opt => ({\n          ...opt,\n          count: sourceCounts.get(opt.title) || 0\n        }))\n      },\n      countries: {\n        ...prev.countries,\n        options: prev.countries.options.map(opt => ({\n          ...opt,\n          count: countryCounts.get(opt.title) || 0\n        }))\n      }\n    }));\n  }, [allProducts]);\n\n  const handleFilterChange = (group: keyof typeof filters, value: string) => {\n    setFilters(prev => ({\n      ...prev,\n      [group]: {\n        ...prev[group],\n        selected: prev[group].selected.includes(value)\n          ? prev[group].selected.filter(v => v !== value)\n          : [...prev[group].selected, value]\n      }\n    }));\n  };\n\n  const handleCategoryClick = (categoryName: string) => {\n    // For now, navigate to a general search since we don't have exact category mapping\n    navigate(`/search?q=${encodeURIComponent(categoryName)}`);\n  };\n\n  const filteredProducts = React.useMemo(() => {\n    return allProducts.filter(product => {\n      const matchesCategory = filters.categories.selected.length === 0 || \n        filters.categories.selected.includes(product.category);\n      const matchesSupplier = filters.suppliers.selected.length === 0 || \n        filters.suppliers.selected.includes(product.supplier);\n      const matchesSource = filters.sources.selected.length === 0 ||\n        filters.sources.selected.includes(product.marketplace);\n      const matchesCountry = filters.countries.selected.length === 0 ||\n        filters.countries.selected.includes(product.country);\n\n      return matchesCategory && matchesSupplier && matchesSource && matchesCountry;\n    });\n  }, [allProducts, filters]);\n\n  const sortedProducts = React.useMemo(() => {\n    return [...filteredProducts].sort((a, b) => {\n      if (!sortBy) return 0;\n\n      let compareA, compareB;\n\n      switch (sortBy) {\n        case 'price':\n          compareA = parseFloat(a.Product_Price.replace(/[^0-9.-]+/g, ''));\n          compareB = parseFloat(b.Product_Price.replace(/[^0-9.-]+/g, ''));\n          break;\n        case 'country':\n          compareA = a.country.toLowerCase();\n          compareB = b.country.toLowerCase();\n          break;\n        case 'category':\n          compareA = a.category.toLowerCase();\n          compareB = b.category.toLowerCase();\n          break;\n        case 'marketplace':\n          compareA = a.marketplace.toLowerCase();\n          compareB = b.marketplace.toLowerCase();\n          break;\n        default:\n          return 0;\n      }\n\n      if (sortOrder === 'asc') {\n        return compareA > compareB ? 1 : -1;\n      } else {\n        return compareA < compareB ? 1 : -1;\n      }\n    });\n  }, [filteredProducts, sortBy, sortOrder]);\n\n  if (error) {\n    return (\n      <div className=\"pt-24 pb-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto text-center\">\n          <h1 className=\"text-3xl font-bold text-red-500 mb-4\">Error Loading Products</h1>\n          <p className=\"text-gray-300\">Please try refreshing the page.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <SEO \n        title=\"All Products\"\n        description=\"Browse our complete catalog of Latin American products. Find wholesale products from trusted suppliers across various categories.\"\n      />\n      <div className=\"pt-24 pb-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h1 className=\"text-3xl font-bold text-gray-100 mb-8\">Featured Categories</h1>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12\">\n            {featuredCategories.map((category) => (\n              <div\n                key={category.id}\n                onClick={() => handleCategoryClick(category.name)}\n                className=\"relative overflow-hidden rounded-lg aspect-[4/3] cursor-pointer group bg-gray-800/50 backdrop-blur-sm hover:bg-gray-700/50 transition-all\"\n              >\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center p-6 text-center\">\n                  <div className=\"mb-4\">\n                    {category.icon}\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">{category.name}</h3>\n                  <p className=\"text-sm text-gray-300\">{category.description}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"space-y-6\">\n            <div className=\"flex flex-col gap-4\">\n              <div>\n                <h2 className=\"text-2xl font-bold text-gray-100\">All Products</h2>\n                <p className=\"text-gray-400\">\n                  Showing {sortedProducts.length} of {totalCount.toLocaleString()} products\n                </p>\n              </div>\n              <StandardFilters\n                filters={filters}\n                onFilterChange={handleFilterChange}\n                sortBy={sortBy}\n                setSortBy={setSortBy}\n                sortOrder={sortOrder}\n                setSortOrder={setSortOrder}\n                activeDropdown={activeDropdown}\n                setActiveDropdown={setActiveDropdown}\n              />\n            </div>\n\n            {isLoading && allProducts.length === 0 ? (\n              <div className=\"flex justify-center py-12\">\n                <LoadingSpinner />\n              </div>\n            ) : sortedProducts.length > 0 ? (\n              <>\n                <div className=\"grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\n                  {sortedProducts.map((product) => (\n                    <ProductCard key={product.id} product={product} />\n                  ))}\n                </div>\n                \n                {/* Infinite scroll sentinel */}\n                <div ref={sentinelRef} className=\"flex justify-center py-8\">\n                  {isFetchingNextPage && <LoadingSpinner />}\n                  {!hasNextPage && allProducts.length > 0 && (\n                    <p className=\"text-gray-400 text-sm\">You've reached the end of the catalog</p>\n                  )}\n                </div>\n              </>\n            ) : (\n              <div className=\"text-center py-12\">\n                <p className=\"text-gray-300 font-bold\">No products found</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}"],"names":["React"],"mappings":"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"}