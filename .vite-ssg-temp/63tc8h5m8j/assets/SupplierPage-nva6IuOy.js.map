{"version":3,"file":"SupplierPage-nva6IuOy.js","sources":["../../../src/components/ui/button.tsx","../../../src/components/ui/separator.tsx","../../../src/pages/SupplierPage.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={buttonVariants({ variant, size, className })}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }","import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={`shrink-0 bg-border ${\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\"\n      } ${className}`}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }","import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { Globe, Mail, MessageSquare, ChevronDown, ChevronUp, ArrowRight } from 'lucide-react';\nimport SEO from '../components/SEO';\nimport { supabase } from '../lib/supabase';\nimport Breadcrumbs from '../components/Breadcrumbs';\nimport { Button } from '../components/ui/button';\nimport { Separator } from '../components/ui/separator';\nimport { getSupplierIdFromParams } from '../utils/urlHelpers';\nimport { analytics } from '../lib/analytics';\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport ProductCard from '../components/ProductCard';\nimport type { Product } from '../types';\n\ninterface SupplierData {\n  Supplier_ID: string;\n  Supplier_Name: string;\n  Supplier_Country_ID: string;\n  Supplier_Location: string;\n  Supplier_Source_Name: string;\n  Supplier_Website: string;\n  Supplier_Email: string;\n  Supplier_Whatsapp: string;\n  ai_related_terms: string;\n  ai_business_summary: string;\n  ai_industries_supported: string;\n  ai_products_services: string;\n  Landing_Page_URL: string;\n  Countries: {\n    Country_Name: string;\n    Country_Image: string;\n  };\n}\n\nexport default function SupplierPage() {\n  const params = useParams();\n  const navigate = useNavigate();\n  const supplierId = getSupplierIdFromParams(params);\n  const [showMoreProductsOffered, setShowMoreProductsOffered] = useState(false);\n  const [imageLoadError, setImageLoadError] = useState(false);\n\n  // Fetch supplier data\n  const { \n    data: supplier, \n    isLoading, \n    error \n  } = useQuery({\n    queryKey: ['supplier', supplierId],\n    queryFn: async () => {\n      if (!supplierId) return null;\n      \n      const { data, error } = await supabase\n        .from('Supplier')\n        .select(`\n          Supplier_ID,\n          Supplier_Title,\n          Supplier_Country_ID,\n          Supplier_Location,\n          Sources:Supplier_Source_ID (\n            Source_Title\n          ),\n          Supplier_Website,\n          Supplier_Email,\n          Supplier_Whatsapp,\n          ai_related_terms,\n          ai_business_summary,\n          ai_industries_supported,\n          ai_products_services,\n          Landing_Page_URL,\n          Countries:Supplier_Country_ID (\n            Country_Title,\n            Country_Image\n          )\n        `)\n        .eq('Supplier_ID', supplierId)\n        .maybeSingle();\n\n      if (error) throw error;\n      if (!data) return null;\n\n      return {\n        Supplier_ID: data.Supplier_ID,\n        Supplier_Name: data.Supplier_Title,\n        Supplier_Country_ID: data.Supplier_Country_ID,\n        Supplier_Location: data.Supplier_Location,\n        Supplier_Source_Name: data.Sources?.Source_Title || '',\n        Supplier_Website: data.Supplier_Website,\n        Supplier_Email: data.Supplier_Email,\n        Supplier_Whatsapp: data.Supplier_Whatsapp,\n        ai_related_terms: data.ai_related_terms,\n        ai_business_summary: data.ai_business_summary,\n        ai_industries_supported: data.ai_industries_supported,\n        ai_products_services: data.ai_products_services,\n        Landing_Page_URL: data.Landing_Page_URL,\n        Countries: {\n          Country_Name: data.Countries?.Country_Title || '',\n          Country_Image: data.Countries?.Country_Image || ''\n        }\n      } as SupplierData;\n    },\n    enabled: !!supplierId,\n    staleTime: 1000 * 60 * 5 // 5 minutes\n  });\n\n  // Fetch supplier products (we can keep a small limit for perf; we'll still slice to 6 when rendering)\n  const { \n    data: supplierProducts = [], \n    isLoading: productsLoading \n  } = useQuery({\n    queryKey: ['supplierProducts', supplierId],\n    queryFn: async () => {\n      if (!supplierId) return [];\n      \n      const { data, error } = await supabase\n        .from('Products')\n        .select(`\n          Product_ID,\n          Product_Title,\n          Product_Price,\n          Product_Image_URL,\n          Product_URL,\n          Product_MOQ,\n          Product_Country_Name,\n          Product_Category_Name,\n          Product_Supplier_Name,\n          Product_Source_Name\n        `)\n        .eq('Product_Supplier_ID', supplierId)\n        .order('Product_Title');\n        // NOTE: no .limit here so we get the true count in memory if small sets are typical.\n        // If your dataset is huge, you can add .limit(50) and rely on the count query below\n        // to decide whether to show \"View All\".\n\n      if (error) throw error;\n      \n      return (data || []).map(product => ({\n        id: product.Product_ID,\n        name: product.Product_Title || 'Untitled Product',\n        Product_Price: product.Product_Price || '$0',\n        image: product.Product_Image_URL || '',\n        country: product.Product_Country_Name || 'Unknown',\n        category: product.Product_Category_Name || 'Unknown',\n        supplier: product.Product_Supplier_Name || 'Unknown',\n        Product_MOQ: product.Product_MOQ || '0',\n        sourceUrl: product.Product_URL || '',\n        marketplace: product.Product_Source_Name || 'Unknown'\n      })) as Product[];\n    },\n    enabled: !!supplierId,\n    staleTime: 1000 * 60 * 5 // 5 minutes\n  });\n\n  // Separate COUNT query to know if there are more than 6 total products\n  const { data: productCount = 0 } = useQuery({\n    queryKey: ['supplierProductCount', supplierId],\n    queryFn: async () => {\n      if (!supplierId) return 0;\n      const { count, error } = await supabase\n        .from('Products')\n        .select('*', { count: 'exact', head: true })\n        .eq('Product_Supplier_ID', supplierId);\n      if (error) throw error;\n      return count ?? 0;\n    },\n    enabled: !!supplierId,\n    staleTime: 1000 * 60 * 5\n  });\n\n  // Helper functions\n  const normalizePhoneNumber = (phone: string): string => phone.replace(/\\D/g, '');\n  const parseTerms = (terms: string): string[] =>\n    terms?.trim()\n      ? terms.split(',').map(t => t.trim()).filter(Boolean).filter((t, i, a) => a.indexOf(t) === i)\n      : [];\n  const parseListContent = (content: string): string[] =>\n    content?.trim()\n      ? content.split('\\n').flatMap(l => l.split(',')).map(i => i.trim()).filter(Boolean).filter((t, i, a) => a.indexOf(t) === i)\n      : [];\n\n  const handleRelatedTermClick = (term: string) => {\n    analytics.trackEvent('related_term_clicked', {\n      term,\n      supplier_id: supplierId,\n      supplier_name: supplier?.Supplier_Name\n    });\n    navigate(`/search?q=${encodeURIComponent(term)}`);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!supplier) {\n    return (\n      <>\n        <SEO \n          title=\"Supplier Not Found\"\n          description=\"The requested supplier could not be found. Browse our other Latin American suppliers.\"\n        />\n        <div className=\"min-h-screen flex items-center justify-center\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-gray-100\">Supplier not found</h2>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  const relatedTerms = parseTerms(supplier.ai_related_terms);\n  const industriesSupported = parseListContent(supplier.ai_products_services);\n  const productsOffered = parseListContent(supplier.ai_industries_supported);\n  const normalizedPhone = normalizePhoneNumber(supplier.Supplier_Whatsapp || '');\n  const shouldShowWhatsApp = normalizedPhone.length >= 7;\n\n  // Debug logging for location data\n  console.log('Supplier location data:', {\n    location: supplier?.Supplier_Location,\n    country: supplier?.Countries?.Country_Name\n  });\n\n  // Show \"View All\" only if there are truly more than 6\n  const hasMoreSupplierProducts = (productCount ?? 0) > 6;\n\n  // Slice to ensure we never render more than 6 on this page\n  const limitedProducts = supplierProducts.slice(0, 6);\n\n  const handleShowAllSupplierProducts = () => {\n    if (supplier?.Supplier_Name) {\n      navigate(`/search?q=${encodeURIComponent(supplier.Supplier_Name)}&mode=products`);\n    } else {\n      // Fallback to general products page if supplier name is not available\n      navigate('/products');\n    }\n  };\n\n  // Truncate products offered list for \"Show more\" toggle\n  const maxProductsOfferedToShow = 5;\n  const visibleProductsOffered = showMoreProductsOffered ? productsOffered : productsOffered.slice(0, maxProductsOfferedToShow);\n  const hasMoreProductsOffered = productsOffered.length > maxProductsOfferedToShow;\n\n  return (\n    <>\n      <SEO \n        title={`${supplier.Supplier_Name} — ${supplier.Countries.Country_Name}`}\n        description={supplier.ai_business_summary?.substring(0, 160) || `${supplier.Supplier_Name} - Latin American supplier from ${supplier.Countries.Country_Name}`}\n        keywords={`${supplier.Supplier_Name}, ${supplier.Countries.Country_Name}, Latin American supplier, wholesale, B2B, ${relatedTerms.join(', ')}`}\n        type=\"profile\"\n      />\n      <div className=\"pt-24 pb-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <Breadcrumbs currentPageTitle={supplier.Supplier_Name} />\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Main Content - Left Column */}\n            <div className=\"lg:col-span-2 space-y-8\">\n              {/* Header */}\n              <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-lg p-6\">\n                <div className=\"flex items-start gap-4 mb-6\">\n                  {/* Flag */}\n                  <div className=\"flex-shrink-0\">\n                    {supplier.Countries.Country_Image ? (\n                      <img\n                        src={supplier.Countries.Country_Image}\n                        alt={`${supplier.Countries.Country_Name} flag`}\n                        className=\"w-8 h-8 rounded object-cover\"\n                      />\n                    ) : (\n                      <div className=\"w-8 h-8 rounded bg-gray-600 flex items-center justify-center\">\n                        <span className=\"text-xs text-gray-300\">🏳️</span>\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Supplier Info */}\n                  <div className=\"flex-1\">\n                    <h1 className=\"text-3xl font-bold text-gray-100 mb-2\">\n                      {supplier.Supplier_Name}\n                    </h1>\n                    {supplier.Supplier_Location?.trim() && (\n                      <p className=\"text-gray-300 mb-1 font-bold\">{supplier.Supplier_Location.trim()}</p>\n                    )}\n                    {supplier.Supplier_Source_Name?.trim() && (\n                      <div className=\"mb-1\">\n                        <span className=\"inline-block px-2 py-1 rounded-full bg-[#F4A024]/20 text-[#F4A024] text-xs font-medium\">\n                          Source: {supplier.Supplier_Source_Name.trim()}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"flex flex-wrap gap-3\">\n                  {supplier.Supplier_Website?.trim() && (\n                    <Button asChild>\n                      <a\n                        href={supplier.Supplier_Website.trim()}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"bg-[#F4A024] text-gray-900 hover:bg-[#F4A024]/90\"\n                      >\n                        <Globe className=\"w-4 h-4 mr-2\" />\n                        Website\n                      </a>\n                    </Button>\n                  )}\n                  \n                  {supplier.Supplier_Email?.trim() && (\n                    <Button asChild>\n                      <a\n                        href={`mailto:${supplier.Supplier_Email.trim()}`}\n                        className=\"bg-[#F4A024] text-gray-900 hover:bg-[#F4A024]/90\"\n                      >\n                        <Mail className=\"w-4 h-4 mr-2\" />\n                        Email\n                      </a>\n                    </Button>\n                  )}\n                  \n                  {shouldShowWhatsApp && (\n                    <Button asChild>\n                      <a\n                        href={`https://wa.me/${normalizedPhone}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"bg-[#F4A024] text-gray-900 hover:bg-[#F4A024]/90\"\n                      >\n                        <MessageSquare className=\"w-4 h-4 mr-2\" />\n                        WhatsApp\n                      </a>\n                    </Button>\n                  )}\n                </div>\n              </div>\n\n              {/* Related Terms */}\n              {relatedTerms.length > 0 && (\n                <>\n                  <Separator className=\"bg-gray-700\" />\n                  <div>\n                    <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Related Terms</h2>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {relatedTerms.map((term, index) => (\n                        <button\n                          key={index}\n                          onClick={() => handleRelatedTermClick(term)}\n                          className=\"px-3 py-1 bg-gray-700/50 hover:bg-[#F4A024]/20 text-gray-300 hover:text-[#F4A024] rounded-full text-sm transition-colors\"\n                        >\n                          {term.length > 20 ? `${term.substring(0, 20)}...` : term}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                </>\n              )}\n\n              {/* About */}\n              {supplier.ai_business_summary?.trim() && (\n                <>\n                  <Separator className=\"bg-gray-700\" />\n                  <div>\n                    <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">About</h2>\n                    <p className=\"text-gray-300 leading-relaxed\">\n                      {supplier.ai_business_summary.trim()}\n                    </p>\n                  </div>\n                </>\n              )}\n\n              {/* Website Preview - Mobile/Tablet */}\n              {supplier.Landing_Page_URL?.trim() && (\n                <>\n                  <Separator className=\"bg-gray-700 lg:hidden\" />\n                  <div className=\"lg:hidden\">\n                    <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Website Preview</h2>\n                    \n                    <div className=\"bg-gray-700/50 rounded-lg overflow-hidden aspect-video mb-4\">\n                      {!imageLoadError ? (\n                        <img\n                          src={supplier.Landing_Page_URL.trim()}\n                          alt={`Website screenshot for ${supplier.Supplier_Name}`}\n                          className=\"w-full h-full object-cover\"\n                          onError={() => setImageLoadError(true)}\n                        />\n                      ) : (\n                        <div className=\"w-full h-full flex flex-col items-center justify-center p-6\">\n                          <Globe className=\"w-12 h-12 text-gray-400 mb-4\" />\n                          <p className=\"text-gray-300 text-sm\">Screenshot unavailable</p>\n                        </div>\n                      )}\n                    </div>\n                    \n                    {supplier.Supplier_Website?.trim() && (\n                      <div className=\"text-center\">\n                        <Button asChild>\n                          <a\n                            href={supplier.Supplier_Website.trim()}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"bg-[#F4A024] text-gray-900 hover:bg-[#F4A024]/90\"\n                          >\n                            <Globe className=\"w-4 h-4 mr-2\" />\n                            Visit Website\n                          </a>\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </>\n              )}\n\n              {/* Industries Supported */}\n              {supplier.ai_industries_supported?.trim() && (\n                <>\n                  <Separator className=\"bg-gray-700\" />\n                  <div>\n                    <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Industries Supported</h2>\n                    <ul className=\"space-y-2\">\n                      {industriesSupported.map((industry, index) => (\n                        <li key={index} className=\"text-gray-300 flex items-start\">\n                          <span className=\"text-[#F4A024] mr-2\">•</span>\n                          {industry}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </>\n              )}\n\n              {/* Products Offered */}\n              {productsOffered.length > 0 && (\n                <>\n                  <Separator className=\"bg-gray-700\" />\n                  <div>\n                    <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Products Offered</h2>\n                    <ul className=\"space-y-2\">\n                      {visibleProductsOffered.map((product, index) => (\n                        <li key={index} className=\"text-gray-300 flex items-start\">\n                          <span className=\"text-[#F4A024] mr-2\">•</span>\n                          {product}\n                        </li>\n                      ))}\n                    </ul>\n                    {hasMoreProductsOffered && (\n                      <button\n                        onClick={() => setShowMoreProductsOffered(!showMoreProductsOffered)}\n                        className=\"mt-4 text-[#F4A024] hover:text-[#F4A024]/80 text-sm font-medium flex items-center gap-1\"\n                      >\n                        {showMoreProductsOffered ? (\n                          <>\n                            <ChevronUp className=\"w-4 h-4\" />\n                            Show less\n                          </>\n                        ) : (\n                          <>\n                            <ChevronDown className=\"w-4 h-4\" />\n                            Show more ({productsOffered.length - maxProductsOfferedToShow} more)\n                          </>\n                        )}\n                      </button>\n                    )}\n                  </div>\n                </>\n              )}\n\n              {/* Supplier Location Overview */}\n              {supplier.Supplier_Location?.trim() && supplier.Countries.Country_Name && (\n                <>\n                  <Separator className=\"bg-gray-700\" />\n                  <div>\n                    <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Supplier Location Overview</h2>\n                    <div className=\"bg-gray-700/30 rounded-lg overflow-hidden\">\n                      <iframe\n                        src={`https://www.google.com/maps/embed/v1/place?key=${import.meta.env.VITE_GOOGLE_MAPS_API_KEY}&q=${encodeURIComponent(\n                          `${supplier.Supplier_Location.trim()}, ${supplier.Countries.Country_Name}`\n                        )}&zoom=10`}\n                        width=\"100%\"\n                        height=\"300\"\n                        style={{ border: 0 }}\n                        allowFullScreen\n                        loading=\"lazy\"\n                        referrerPolicy=\"no-referrer-when-downgrade\"\n                        title={`Map showing general area of ${supplier.Supplier_Name}`}\n                      />\n                    </div>\n                    <p className=\"text-xs text-gray-400 mt-2\">\n                      This map shows the general area where the supplier is located for reference purposes.\n                    </p>\n                  </div>\n                </>\n              )}\n\n              {/* Supplier Products Section */}\n              <>\n                <Separator className=\"bg-gray-700\" />\n                <div>\n                  <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">\n                    Supplier Products\n                    {supplierProducts.length > 0 && (\n                      <span className=\"text-sm font-normal text-gray-400 ml-2\">\n                        ({productCount} {productCount === 1 ? 'product' : 'products'})\n                      </span>\n                    )}\n                  </h2>\n                  \n                  {productsLoading ? (\n                    <div className=\"flex justify-center py-8\">\n                      <LoadingSpinner />\n                    </div>\n                  ) : supplierProducts.length > 0 ? (\n                    <>\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n                        {limitedProducts.map((product) => (\n                          <ProductCard key={product.id} product={product} />\n                        ))}\n                      </div>\n                      {hasMoreSupplierProducts && (\n                        <div className=\"mt-6 text-center\">\n                          <button\n                            onClick={handleShowAllSupplierProducts}\n                            className=\"text-[#F4A024] hover:text-[#F4A024]/80 text-sm font-medium flex items-center gap-1 mx-auto\"\n                          >\n                            View All Products from {supplier.Supplier_Name}\n                            <ArrowRight className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    <div className=\"text-center py-8 bg-gray-700/30 rounded-lg\">\n                      <p className=\"text-gray-400\">No products found for this supplier.</p>\n                      <p className=\"text-sm text-gray-500 mt-1\">\n                        Products may not be available in our current catalog.\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </>\n            </div>\n\n            {/* Right Column - Website Preview (Desktop only) */}\n            <div className=\"lg:col-span-1\">\n              {supplier.Landing_Page_URL?.trim() && (\n                <div className=\"hidden lg:block lg:sticky lg:top-24\">\n                  <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-lg p-6\">\n                    <h2 className=\"text-xl font-semibold text-gray-100 mb-4\">Website Preview</h2>\n                    \n                    <div className=\"bg-gray-700/50 rounded-lg overflow-hidden aspect-video mb-4\">\n                      {!imageLoadError ? (\n                        <img\n                          src={supplier.Landing_Page_URL.trim()}\n                          alt={`Website screenshot for ${supplier.Supplier_Name}`}\n                          className=\"w-full h-full object-cover\"\n                          onError={() => setImageLoadError(true)}\n                        />\n                      ) : (\n                        <div className=\"w-full h-full flex flex-col items-center justify-center p-6\">\n                          <Globe className=\"w-12 h-12 text-gray-400 mb-4\" />\n                          <p className=\"text-gray-300 text-sm\">Screenshot unavailable</p>\n                        </div>\n                      )}\n                    </div>\n                    \n                    {supplier.Supplier_Website?.trim() && (\n                      <div className=\"text-center\">\n                        <Button asChild>\n                          <a\n                            href={supplier.Supplier_Website.trim()}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"bg-[#F4A024] text-gray-900 hover:bg-[#F4A024]/90\"\n                          >\n                            <Globe className=\"w-4 h-4 mr-2\" />\n                            Visit Website\n                          </a>\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["error","_a","_b","_c"],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA,MAAM,iBAAiB;AAAA,EACrB;AAAA,EACA;AAAA,IACE,UAAU;AAAA,MACR,SAAS;AAAA,QACP,SAAS;AAAA,QACT,aACE;AAAA,QACF,SACE;AAAA,QACF,WACE;AAAA,QACF,OAAO;AAAA,QACP,MAAM;AAAA,MAAA;AAAA,MAER,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,MAAM;AAAA,MAAA;AAAA,IACR;AAAA,IAEF,iBAAiB;AAAA,MACf,SAAS;AAAA,MACT,MAAM;AAAA,IAAA;AAAA,EACR;AAEJ;AAQA,MAAM,SAAS,MAAM;AAAA,EACnB,CAAC,EAAE,WAAW,SAAS,MAAM,UAAU,OAAO,GAAG,MAAA,GAAS,QAAQ;AAChE,UAAM,OAAO,UAAU,OAAO;AAC9B,WACE;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAW,eAAe,EAAE,SAAS,MAAM,WAAW;AAAA,QACtD;AAAA,QACC,GAAG;AAAA,MAAA;AAAA,IAAA;AAAA,EACN;AAGN;AACA,OAAO,cAAc;AChDrB,MAAM,YAAY,MAAM;AAAA,EAItB,CACE,EAAE,WAAW,cAAc,cAAc,aAAa,MAAM,GAAG,SAC/D,QAEA;AAAA,IAAC,mBAAmB;AAAA,IAAnB;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA,WAAW,sBACT,gBAAgB,eAAe,mBAAmB,gBACpD,IAAI,SAAS;AAAA,MACZ,GAAG;AAAA,IAAA;AAAA,EAAA;AAGV;AACA,UAAU,cAAc,mBAAmB,KAAK;ACahD,SAAwB,eAAe;;AACrC,QAAM,SAAS,UAAA;AACf,QAAM,WAAW,YAAA;AACjB,QAAM,aAAa,wBAAwB,MAAM;AACjD,QAAM,CAAC,yBAAyB,0BAA0B,IAAI,SAAS,KAAK;AAC5E,QAAM,CAAC,gBAAgB,iBAAiB,IAAI,SAAS,KAAK;AAG1D,QAAM;AAAA,IACJ,MAAM;AAAA,IACN;AAAA,IACA;AAAA,EAAA,IACE,SAAS;AAAA,IACX,UAAU,CAAC,YAAY,UAAU;AAAA,IACjC,SAAS,YAAY;;AACnB,UAAI,CAAC,WAAY,QAAO;AAExB,YAAM,EAAE,MAAM,OAAAA,OAAAA,IAAU,MAAM,SAC3B,KAAK,UAAU,EACf,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAoBP,EACA,GAAG,eAAe,UAAU,EAC5B,YAAA;AAEH,UAAIA,OAAO,OAAMA;AACjB,UAAI,CAAC,KAAM,QAAO;AAElB,aAAO;AAAA,QACL,aAAa,KAAK;AAAA,QAClB,eAAe,KAAK;AAAA,QACpB,qBAAqB,KAAK;AAAA,QAC1B,mBAAmB,KAAK;AAAA,QACxB,wBAAsBC,MAAA,KAAK,YAAL,gBAAAA,IAAc,iBAAgB;AAAA,QACpD,kBAAkB,KAAK;AAAA,QACvB,gBAAgB,KAAK;AAAA,QACrB,mBAAmB,KAAK;AAAA,QACxB,kBAAkB,KAAK;AAAA,QACvB,qBAAqB,KAAK;AAAA,QAC1B,yBAAyB,KAAK;AAAA,QAC9B,sBAAsB,KAAK;AAAA,QAC3B,kBAAkB,KAAK;AAAA,QACvB,WAAW;AAAA,UACT,gBAAcC,MAAA,KAAK,cAAL,gBAAAA,IAAgB,kBAAiB;AAAA,UAC/C,iBAAeC,MAAA,KAAK,cAAL,gBAAAA,IAAgB,kBAAiB;AAAA,QAAA;AAAA,MAClD;AAAA,IACF;AAAA,IAEF,SAAS,CAAC,CAAC;AAAA,IACX,WAAW,MAAO,KAAK;AAAA;AAAA,EAAA,CACxB;AAGD,QAAM;AAAA,IACJ,MAAM,mBAAmB,CAAA;AAAA,IACzB,WAAW;AAAA,EAAA,IACT,SAAS;AAAA,IACX,UAAU,CAAC,oBAAoB,UAAU;AAAA,IACzC,SAAS,YAAY;AACnB,UAAI,CAAC,WAAY,QAAO,CAAA;AAExB,YAAM,EAAE,MAAM,OAAAH,OAAAA,IAAU,MAAM,SAC3B,KAAK,UAAU,EACf,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWP,EACA,GAAG,uBAAuB,UAAU,EACpC,MAAM,eAAe;AAKxB,UAAIA,OAAO,OAAMA;AAEjB,cAAQ,QAAQ,CAAA,GAAI,IAAI,CAAA,aAAY;AAAA,QAClC,IAAI,QAAQ;AAAA,QACZ,MAAM,QAAQ,iBAAiB;AAAA,QAC/B,eAAe,QAAQ,iBAAiB;AAAA,QACxC,OAAO,QAAQ,qBAAqB;AAAA,QACpC,SAAS,QAAQ,wBAAwB;AAAA,QACzC,UAAU,QAAQ,yBAAyB;AAAA,QAC3C,UAAU,QAAQ,yBAAyB;AAAA,QAC3C,aAAa,QAAQ,eAAe;AAAA,QACpC,WAAW,QAAQ,eAAe;AAAA,QAClC,aAAa,QAAQ,uBAAuB;AAAA,MAAA,EAC5C;AAAA,IAAA;AAAA,IAEJ,SAAS,CAAC,CAAC;AAAA,IACX,WAAW,MAAO,KAAK;AAAA;AAAA,EAAA,CACxB;AAGD,QAAM,EAAE,MAAM,eAAe,EAAA,IAAM,SAAS;AAAA,IAC1C,UAAU,CAAC,wBAAwB,UAAU;AAAA,IAC7C,SAAS,YAAY;AACnB,UAAI,CAAC,WAAY,QAAO;AACxB,YAAM,EAAE,OAAO,OAAAA,OAAAA,IAAU,MAAM,SAC5B,KAAK,UAAU,EACf,OAAO,KAAK,EAAE,OAAO,SAAS,MAAM,MAAM,EAC1C,GAAG,uBAAuB,UAAU;AACvC,UAAIA,OAAO,OAAMA;AACjB,aAAO,SAAS;AAAA,IAAA;AAAA,IAElB,SAAS,CAAC,CAAC;AAAA,IACX,WAAW,MAAO,KAAK;AAAA,EAAA,CACxB;AAGD,QAAM,uBAAuB,CAAC,UAA0B,MAAM,QAAQ,OAAO,EAAE;AAC/E,QAAM,aAAa,CAAC,WAClB,+BAAO,UACH,MAAM,MAAM,GAAG,EAAE,IAAI,CAAA,MAAK,EAAE,MAAM,EAAE,OAAO,OAAO,EAAE,OAAO,CAAC,GAAG,GAAG,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,IAC1F,CAAA;AACN,QAAM,mBAAmB,CAAC,aACxB,mCAAS,UACL,QAAQ,MAAM,IAAI,EAAE,QAAQ,CAAA,MAAK,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,CAAA,MAAK,EAAE,KAAA,CAAM,EAAE,OAAO,OAAO,EAAE,OAAO,CAAC,GAAG,GAAG,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,IACxH,CAAA;AAEN,QAAM,yBAAyB,CAAC,SAAiB;AAC/C,cAAU,WAAW,wBAAwB;AAAA,MAC3C;AAAA,MACA,aAAa;AAAA,MACb,eAAe,qCAAU;AAAA,IAAA,CAC1B;AACD,aAAS,aAAa,mBAAmB,IAAI,CAAC,EAAE;AAAA,EAAA;AAGlD,MAAI,WAAW;AACb,+BACG,OAAA,EAAI,WAAU,iDACb,UAAA,oBAAC,kBAAe,GAClB;AAAA,EAAA;AAIJ,MAAI,CAAC,UAAU;AACb,WACE,qBAAA,UAAA,EACE,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,OAAM;AAAA,UACN,aAAY;AAAA,QAAA;AAAA,MAAA;AAAA,MAEd,oBAAC,OAAA,EAAI,WAAU,iDACb,8BAAC,OAAA,EAAI,WAAU,eACb,UAAA,oBAAC,MAAA,EAAG,WAAU,oCAAmC,UAAA,sBAAkB,EAAA,CACrE,EAAA,CACF;AAAA,IAAA,GACF;AAAA,EAAA;AAIJ,QAAM,eAAe,WAAW,SAAS,gBAAgB;AACzD,QAAM,sBAAsB,iBAAiB,SAAS,oBAAoB;AAC1E,QAAM,kBAAkB,iBAAiB,SAAS,uBAAuB;AACzE,QAAM,kBAAkB,qBAAqB,SAAS,qBAAqB,EAAE;AAC7E,QAAM,qBAAqB,gBAAgB,UAAU;AAGrD,UAAQ,IAAI,2BAA2B;AAAA,IACrC,UAAU,qCAAU;AAAA,IACpB,UAAS,0CAAU,cAAV,mBAAqB;AAAA,EAAA,CAC/B;AAGD,QAAM,2BAA2B,gBAAgB,KAAK;AAGtD,QAAM,kBAAkB,iBAAiB,MAAM,GAAG,CAAC;AAEnD,QAAM,gCAAgC,MAAM;AAC1C,QAAI,qCAAU,eAAe;AAC3B,eAAS,aAAa,mBAAmB,SAAS,aAAa,CAAC,gBAAgB;AAAA,IAAA,OAC3E;AAEL,eAAS,WAAW;AAAA,IAAA;AAAA,EACtB;AAIF,QAAM,2BAA2B;AACjC,QAAM,yBAAyB,0BAA0B,kBAAkB,gBAAgB,MAAM,GAAG,wBAAwB;AAC5H,QAAM,yBAAyB,gBAAgB,SAAS;AAExD,SACE,qBAAA,UAAA,EACE,UAAA;AAAA,IAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,OAAO,GAAG,SAAS,aAAa,MAAM,SAAS,UAAU,YAAY;AAAA,QACrE,eAAa,cAAS,wBAAT,mBAA8B,UAAU,GAAG,SAAQ,GAAG,SAAS,aAAa,mCAAmC,SAAS,UAAU,YAAY;AAAA,QAC3J,UAAU,GAAG,SAAS,aAAa,KAAK,SAAS,UAAU,YAAY,8CAA8C,aAAa,KAAK,IAAI,CAAC;AAAA,QAC5I,MAAK;AAAA,MAAA;AAAA,IAAA;AAAA,wBAEN,OAAA,EAAI,WAAU,oCACb,UAAA,qBAAC,OAAA,EAAI,WAAU,qBACb,UAAA;AAAA,0BAAC,aAAA,EAAY,kBAAkB,SAAS,eAAe;AAAA,MAEvD,qBAAC,OAAA,EAAI,WAAU,yCAEb,UAAA;AAAA,QAAA,qBAAC,OAAA,EAAI,WAAU,2BAEb,UAAA;AAAA,UAAA,qBAAC,OAAA,EAAI,WAAU,kDACb,UAAA;AAAA,YAAA,qBAAC,OAAA,EAAI,WAAU,+BAEb,UAAA;AAAA,cAAA,oBAAC,OAAA,EAAI,WAAU,iBACZ,UAAA,SAAS,UAAU,gBAClB;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,KAAK,SAAS,UAAU;AAAA,kBACxB,KAAK,GAAG,SAAS,UAAU,YAAY;AAAA,kBACvC,WAAU;AAAA,gBAAA;AAAA,cAAA,IAGZ,oBAAC,OAAA,EAAI,WAAU,gEACb,UAAA,oBAAC,QAAA,EAAK,WAAU,yBAAwB,UAAA,MAAA,CAAG,EAAA,CAC7C,GAEJ;AAAA,cAGA,qBAAC,OAAA,EAAI,WAAU,UACb,UAAA;AAAA,gBAAA,oBAAC,MAAA,EAAG,WAAU,yCACX,UAAA,SAAS,eACZ;AAAA,kBACC,cAAS,sBAAT,mBAA4B,+BAC1B,KAAA,EAAE,WAAU,gCAAgC,UAAA,SAAS,kBAAkB,KAAA,GAAO;AAAA,kBAEhF,cAAS,yBAAT,mBAA+B,+BAC7B,OAAA,EAAI,WAAU,QACb,UAAA,qBAAC,QAAA,EAAK,WAAU,0FAAyF,UAAA;AAAA,kBAAA;AAAA,kBAC9F,SAAS,qBAAqB,KAAA;AAAA,gBAAK,EAAA,CAC9C,EAAA,CACF;AAAA,cAAA,GAEJ;AAAA,YAAA,GACF;AAAA,YAGA,qBAAC,OAAA,EAAI,WAAU,wBACZ,UAAA;AAAA,gBAAA,cAAS,qBAAT,mBAA2B,+BACzB,QAAA,EAAO,SAAO,MACb,UAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,MAAM,SAAS,iBAAiB,KAAA;AAAA,kBAChC,QAAO;AAAA,kBACP,KAAI;AAAA,kBACJ,WAAU;AAAA,kBAEV,UAAA;AAAA,oBAAA,oBAAC,OAAA,EAAM,WAAU,gBAAe;AAAA,oBAAE;AAAA,kBAAA;AAAA,gBAAA;AAAA,cAAA,GAGtC;AAAA,gBAGD,cAAS,mBAAT,mBAAyB,+BACvB,QAAA,EAAO,SAAO,MACb,UAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,MAAM,UAAU,SAAS,eAAe,MAAM;AAAA,kBAC9C,WAAU;AAAA,kBAEV,UAAA;AAAA,oBAAA,oBAAC,MAAA,EAAK,WAAU,gBAAe;AAAA,oBAAE;AAAA,kBAAA;AAAA,gBAAA;AAAA,cAAA,GAGrC;AAAA,cAGD,sBACC,oBAAC,QAAA,EAAO,SAAO,MACb,UAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,MAAM,iBAAiB,eAAe;AAAA,kBACtC,QAAO;AAAA,kBACP,KAAI;AAAA,kBACJ,WAAU;AAAA,kBAEV,UAAA;AAAA,oBAAA,oBAAC,eAAA,EAAc,WAAU,gBAAe;AAAA,oBAAE;AAAA,kBAAA;AAAA,gBAAA;AAAA,cAAA,GAG9C;AAAA,YAAA,GAEJ;AAAA,UAAA,GACF;AAAA,UAGC,aAAa,SAAS,KACrB,qBAAA,UAAA,EACE,UAAA;AAAA,YAAA,oBAAC,WAAA,EAAU,WAAU,eAAc;AAAA,iCAClC,OAAA,EACC,UAAA;AAAA,kCAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,iBAAa;AAAA,cACtE,oBAAC,SAAI,WAAU,wBACZ,uBAAa,IAAI,CAAC,MAAM,UACvB;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBAEC,SAAS,MAAM,uBAAuB,IAAI;AAAA,kBAC1C,WAAU;AAAA,kBAET,UAAA,KAAK,SAAS,KAAK,GAAG,KAAK,UAAU,GAAG,EAAE,CAAC,QAAQ;AAAA,gBAAA;AAAA,gBAJ/C;AAAA,cAAA,CAMR,GACH;AAAA,YAAA,GACF;AAAA,UAAA,GACF;AAAA,YAID,cAAS,wBAAT,mBAA8B,WAC7B,qBAAA,UAAA,EACE,UAAA;AAAA,YAAA,oBAAC,WAAA,EAAU,WAAU,eAAc;AAAA,iCAClC,OAAA,EACC,UAAA;AAAA,kCAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,SAAK;AAAA,kCAC7D,KAAA,EAAE,WAAU,iCACV,UAAA,SAAS,oBAAoB,OAAK,CACrC;AAAA,YAAA,GACF;AAAA,UAAA,GACF;AAAA,YAID,cAAS,qBAAT,mBAA2B,WAC1B,qBAAA,UAAA,EACE,UAAA;AAAA,YAAA,oBAAC,WAAA,EAAU,WAAU,yBAAwB;AAAA,YAC7C,qBAAC,OAAA,EAAI,WAAU,aACb,UAAA;AAAA,kCAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,mBAAe;AAAA,kCAEvE,OAAA,EAAI,WAAU,+DACZ,WAAC,iBACA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,KAAK,SAAS,iBAAiB,KAAA;AAAA,kBAC/B,KAAK,0BAA0B,SAAS,aAAa;AAAA,kBACrD,WAAU;AAAA,kBACV,SAAS,MAAM,kBAAkB,IAAI;AAAA,gBAAA;AAAA,cAAA,IAGvC,qBAAC,OAAA,EAAI,WAAU,+DACb,UAAA;AAAA,gBAAA,oBAAC,OAAA,EAAM,WAAU,gCAA+B;AAAA,oCAC/C,KAAA,EAAE,WAAU,yBAAwB,UAAA,0BAAsB;AAAA,cAAA,EAAA,CAC7D,EAAA,CAEJ;AAAA,gBAEC,cAAS,qBAAT,mBAA2B,+BACzB,OAAA,EAAI,WAAU,eACb,UAAA,oBAAC,QAAA,EAAO,SAAO,MACb,UAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,MAAM,SAAS,iBAAiB,KAAA;AAAA,kBAChC,QAAO;AAAA,kBACP,KAAI;AAAA,kBACJ,WAAU;AAAA,kBAEV,UAAA;AAAA,oBAAA,oBAAC,OAAA,EAAM,WAAU,gBAAe;AAAA,oBAAE;AAAA,kBAAA;AAAA,gBAAA;AAAA,cAAA,EAEpC,CACF,EAAA,CACF;AAAA,YAAA,GAEJ;AAAA,UAAA,GACF;AAAA,YAID,cAAS,4BAAT,mBAAkC,WACjC,qBAAA,UAAA,EACE,UAAA;AAAA,YAAA,oBAAC,WAAA,EAAU,WAAU,eAAc;AAAA,iCAClC,OAAA,EACC,UAAA;AAAA,kCAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,wBAAoB;AAAA,kCAC5E,MAAA,EAAG,WAAU,aACX,UAAA,oBAAoB,IAAI,CAAC,UAAU,UAClC,qBAAC,MAAA,EAAe,WAAU,kCACxB,UAAA;AAAA,oCAAC,QAAA,EAAK,WAAU,uBAAsB,UAAA,KAAC;AAAA,gBACtC;AAAA,cAAA,EAAA,GAFM,KAGT,CACD,GACH;AAAA,YAAA,GACF;AAAA,UAAA,GACF;AAAA,UAID,gBAAgB,SAAS,KACxB,qBAAA,UAAA,EACE,UAAA;AAAA,YAAA,oBAAC,WAAA,EAAU,WAAU,eAAc;AAAA,iCAClC,OAAA,EACC,UAAA;AAAA,kCAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,oBAAgB;AAAA,kCACxE,MAAA,EAAG,WAAU,aACX,UAAA,uBAAuB,IAAI,CAAC,SAAS,UACpC,qBAAC,MAAA,EAAe,WAAU,kCACxB,UAAA;AAAA,oCAAC,QAAA,EAAK,WAAU,uBAAsB,UAAA,KAAC;AAAA,gBACtC;AAAA,cAAA,KAFM,KAGT,CACD,GACH;AAAA,cACC,0BACC;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,SAAS,MAAM,2BAA2B,CAAC,uBAAuB;AAAA,kBAClE,WAAU;AAAA,kBAET,oCACC,qBAAA,UAAA,EACE,UAAA;AAAA,oBAAA,oBAAC,WAAA,EAAU,WAAU,WAAU;AAAA,oBAAE;AAAA,kBAAA,GAEnC,IAEA,qBAAA,UAAA,EACE,UAAA;AAAA,oBAAA,oBAAC,aAAA,EAAY,WAAU,WAAU;AAAA,oBAAE;AAAA,oBACvB,gBAAgB,SAAS;AAAA,oBAAyB;AAAA,kBAAA,GAChE;AAAA,gBAAA;AAAA,cAAA;AAAA,YAEJ,GAEJ;AAAA,UAAA,GACF;AAAA,YAID,cAAS,sBAAT,mBAA4B,WAAU,SAAS,UAAU,gBACxD,qBAAA,UAAA,EACE,UAAA;AAAA,YAAA,oBAAC,WAAA,EAAU,WAAU,eAAc;AAAA,iCAClC,OAAA,EACC,UAAA;AAAA,kCAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,8BAA0B;AAAA,cACnF,oBAAC,OAAA,EAAI,WAAU,6CACb,UAAA;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACC,KAAK,kDAAkD,yCAAwC,MAAM;AAAA,oBACnG,GAAG,SAAS,kBAAkB,KAAA,CAAM,KAAK,SAAS,UAAU,YAAY;AAAA,kBAAA,CACzE;AAAA,kBACD,OAAM;AAAA,kBACN,QAAO;AAAA,kBACP,OAAO,EAAE,QAAQ,EAAA;AAAA,kBACjB,iBAAe;AAAA,kBACf,SAAQ;AAAA,kBACR,gBAAe;AAAA,kBACf,OAAO,+BAA+B,SAAS,aAAa;AAAA,gBAAA;AAAA,cAAA,GAEhE;AAAA,kCACC,KAAA,EAAE,WAAU,8BAA6B,UAAA,yFAE1C;AAAA,YAAA,GACF;AAAA,UAAA,GACF;AAAA,UAIF,qBAAA,UAAA,EACE,UAAA;AAAA,YAAA,oBAAC,WAAA,EAAU,WAAU,eAAc;AAAA,iCAClC,OAAA,EACC,UAAA;AAAA,cAAA,qBAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA;AAAA,gBAAA;AAAA,gBAEtD,iBAAiB,SAAS,KACzB,qBAAC,QAAA,EAAK,WAAU,0CAAyC,UAAA;AAAA,kBAAA;AAAA,kBACrD;AAAA,kBAAa;AAAA,kBAAE,iBAAiB,IAAI,YAAY;AAAA,kBAAW;AAAA,gBAAA,GAC/D;AAAA,cAAA,GAEJ;AAAA,cAEC,sCACE,OAAA,EAAI,WAAU,4BACb,8BAAC,gBAAA,CAAA,CAAe,EAAA,CAClB,IACE,iBAAiB,SAAS,IAC5B,qBAAA,UAAA,EACE,UAAA;AAAA,oCAAC,OAAA,EAAI,WAAU,wDACZ,UAAA,gBAAgB,IAAI,CAAC,YACpB,oBAAC,aAAA,EAA6B,QAAA,GAAZ,QAAQ,EAAsB,CACjD,GACH;AAAA,gBACC,2BACC,oBAAC,OAAA,EAAI,WAAU,oBACb,UAAA;AAAA,kBAAC;AAAA,kBAAA;AAAA,oBACC,SAAS;AAAA,oBACT,WAAU;AAAA,oBACX,UAAA;AAAA,sBAAA;AAAA,sBACyB,SAAS;AAAA,sBACjC,oBAAC,YAAA,EAAW,WAAU,WAAU;AAAA,oBAAA;AAAA,kBAAA;AAAA,gBAAA,GAEpC;AAAA,cAAA,EAAA,CAEJ,IAEA,qBAAC,OAAA,EAAI,WAAU,8CACb,UAAA;AAAA,oCAAC,KAAA,EAAE,WAAU,iBAAgB,UAAA,wCAAoC;AAAA,oCAChE,KAAA,EAAE,WAAU,8BAA6B,UAAA,yDAE1C;AAAA,cAAA,GACF;AAAA,YAAA,GAEJ;AAAA,UAAA,GACF;AAAA,QAAA,GACF;AAAA,QAGA,oBAAC,OAAA,EAAI,WAAU,iBACZ,0BAAS,wCAAkB,+BACzB,SAAI,WAAU,uCACb,+BAAC,OAAA,EAAI,WAAU,kDACb,UAAA;AAAA,8BAAC,MAAA,EAAG,WAAU,4CAA2C,UAAA,mBAAe;AAAA,8BAEvE,OAAA,EAAI,WAAU,+DACZ,WAAC,iBACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,KAAK,SAAS,iBAAiB,KAAA;AAAA,cAC/B,KAAK,0BAA0B,SAAS,aAAa;AAAA,cACrD,WAAU;AAAA,cACV,SAAS,MAAM,kBAAkB,IAAI;AAAA,YAAA;AAAA,UAAA,IAGvC,qBAAC,OAAA,EAAI,WAAU,+DACb,UAAA;AAAA,YAAA,oBAAC,OAAA,EAAM,WAAU,gCAA+B;AAAA,gCAC/C,KAAA,EAAE,WAAU,yBAAwB,UAAA,0BAAsB;AAAA,UAAA,EAAA,CAC7D,EAAA,CAEJ;AAAA,YAEC,cAAS,qBAAT,mBAA2B,+BACzB,OAAA,EAAI,WAAU,eACb,UAAA,oBAAC,QAAA,EAAO,SAAO,MACb,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,MAAM,SAAS,iBAAiB,KAAA;AAAA,cAChC,QAAO;AAAA,cACP,KAAI;AAAA,cACJ,WAAU;AAAA,cAEV,UAAA;AAAA,gBAAA,oBAAC,OAAA,EAAM,WAAU,gBAAe;AAAA,gBAAE;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA,EAEpC,CACF,EAAA,CACF;AAAA,QAAA,EAAA,CAEJ,EAAA,CACF,GAEJ;AAAA,MAAA,GACF;AAAA,IAAA,EAAA,CACF,EAAA,CACF;AAAA,EAAA,GACF;AAEJ;"}