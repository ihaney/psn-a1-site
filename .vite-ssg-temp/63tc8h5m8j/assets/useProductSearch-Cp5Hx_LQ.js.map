{"version":3,"file":"useProductSearch-Cp5Hx_LQ.js","sources":["../../../src/hooks/useProductSearch.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\n\ninterface Product {\n  Product_ID: string;\n  Product_Title: string;\n  Product_Price: string;\n  Product_Image_URL: string;\n  category_title: string;\n  supplier_title: string;\n}\n\nexport function useProductSearch(query: string, supplierId: string | null = null) {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function searchProducts() {\n      if (!query.trim()) {\n        setProducts([]);\n        return;\n      }\n\n      setLoading(true);\n      try {\n        let productQuery = supabase\n          .from('Products')\n          .select(`\n            Product_ID,\n            Product_Title,\n            Product_Price,\n            Product_Image_URL,\n            Product_Category_Name,\n            Product_Supplier_Name\n          `)\n          .ilike('Product_Title', `%${query}%`)\n          .limit(5);\n\n        // Only filter by supplier if supplierId is provided\n        if (supplierId) {\n          productQuery = productQuery.eq('Product_Supplier_ID', supplierId);\n        }\n\n        const { data, error } = await productQuery;\n\n        if (error) throw error;\n        \n        const formattedProducts = (data || []).map(product => ({\n          Product_ID: product.Product_ID,\n          Product_Title: product.Product_Title,\n          Product_Price: product.Product_Price || '$0',\n          Product_Image_URL: product.Product_Image_URL || '',\n          category_title: product.Product_Category_Name || 'Unknown',\n          supplier_title: product.Product_Supplier_Name || 'Unknown Supplier'\n        }));\n\n        setProducts(formattedProducts);\n      } catch (error) {\n        console.error('Error searching products:', error);\n        setProducts([]);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    const timeoutId = setTimeout(searchProducts, 300);\n    return () => clearTimeout(timeoutId);\n  }, [query, supplierId]);\n\n  return { products, loading };\n}"],"names":[],"mappings":";;AAYO,SAAS,iBAAiB,OAAe,aAA4B,MAAM;AAChF,QAAM,CAAC,UAAU,WAAW,IAAI,SAAoB,CAAA,CAAE;AACtD,QAAM,CAAC,SAAS,UAAU,IAAI,SAAS,KAAK;AAE5C,YAAU,MAAM;AACd,mBAAe,iBAAiB;AAC9B,UAAI,CAAC,MAAM,QAAQ;AACjB,oBAAY,CAAA,CAAE;AACd;AAAA,MAAA;AAGF,iBAAW,IAAI;AACf,UAAI;AACF,YAAI,eAAe,SAChB,KAAK,UAAU,EACf,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOP,EACA,MAAM,iBAAiB,IAAI,KAAK,GAAG,EACnC,MAAM,CAAC;AAGV,YAAI,YAAY;AACd,yBAAe,aAAa,GAAG,uBAAuB,UAAU;AAAA,QAAA;AAGlE,cAAM,EAAE,MAAM,MAAA,IAAU,MAAM;AAE9B,YAAI,MAAO,OAAM;AAEjB,cAAM,qBAAqB,QAAQ,CAAA,GAAI,IAAI,CAAA,aAAY;AAAA,UACrD,YAAY,QAAQ;AAAA,UACpB,eAAe,QAAQ;AAAA,UACvB,eAAe,QAAQ,iBAAiB;AAAA,UACxC,mBAAmB,QAAQ,qBAAqB;AAAA,UAChD,gBAAgB,QAAQ,yBAAyB;AAAA,UACjD,gBAAgB,QAAQ,yBAAyB;AAAA,QAAA,EACjD;AAEF,oBAAY,iBAAiB;AAAA,MAAA,SACtB,OAAO;AACd,gBAAQ,MAAM,6BAA6B,KAAK;AAChD,oBAAY,CAAA,CAAE;AAAA,MAAA,UAChB;AACE,mBAAW,KAAK;AAAA,MAAA;AAAA,IAClB;AAGF,UAAM,YAAY,WAAW,gBAAgB,GAAG;AAChD,WAAO,MAAM,aAAa,SAAS;AAAA,EAAA,GAClC,CAAC,OAAO,UAAU,CAAC;AAEtB,SAAO,EAAE,UAAU,QAAA;AACrB;"}