{"version":3,"file":"ProductPage-CpugrE09.js","sources":["../../../src/hooks/useSimilarProducts.ts","../../../src/pages/ProductPage.tsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { supabase } from '../lib/supabase';\nimport type { Product } from '../types';\n\nexport function useSimilarProducts(productId: string) {\n  return useQuery({\n    queryKey: ['similarProducts', productId],\n    queryFn: async () => {\n      // For now, let's get similar products based on category\n      // First get the current product's category\n      const { data: currentProduct, error: productError } = await supabase\n        .from('Products')\n        .select('Product_Category_Name')\n        .eq('Product_ID', productId)\n        .single();\n\n      if (productError) throw productError;\n\n      // Then get other products in the same category\n      const { data: similarProducts, error: similarError } = await supabase\n        .from('Products')\n        .select(`\n          Product_ID,\n          Product_Title,\n          Product_Price,\n          Product_Image_URL,\n          Product_URL,\n          Product_MOQ,\n          Product_Country_Name,\n          Product_Category_Name,\n          Product_Supplier_Name,\n          Product_Source_Name\n        `)\n        .eq('Product_Category_Name', currentProduct.Product_Category_Name)\n        .neq('Product_ID', productId)\n        .limit(4);\n\n      if (similarError) throw similarError;\n\n      return similarProducts.map(product => ({\n        id: product.Product_ID,\n        name: product.Product_Title,\n        Product_Price: product.Product_Price || '$0',\n        image: product.Product_Image_URL || '',\n        country: product.Product_Country_Name || 'Unknown',\n        category: product.Product_Category_Name || 'Unknown',\n        supplier: product.Product_Supplier_Name || 'Unknown',\n        Product_MOQ: product.Product_MOQ || '0',\n        sourceUrl: product.Product_URL || '',\n        marketplace: product.Product_Source_Name || 'Unknown'\n      }));\n    },\n    staleTime: 1000 * 60 * 60 // 1 hour\n  });\n}","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { ExternalLink, Share2, Bookmark } from 'lucide-react';\nimport SEO from '../components/SEO';\nimport { supabase } from '../lib/supabase';\nimport { analytics } from '../lib/analytics';\nimport type { Product } from '../types';\nimport toast from 'react-hot-toast';\nimport { useSavedItems } from '../hooks/useSavedItems';\nimport { useContactHistory } from '../hooks/useContactHistory';\nimport { useSimilarProducts } from '../hooks/useSimilarProducts';\nimport ProductCard from '../components/ProductCard';\nimport Breadcrumbs from '../components/Breadcrumbs';\nimport { createSupplierUrl } from '../utils/urlHelpers';\nimport { isBrowser } from '../lib/isomorphic-helpers';\n\ninterface ExtendedProduct extends Product {\n  supplierEmail?: string;\n  supplierWhatsapp?: string;\n}\n\nexport default function ProductPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [isMobile] = useState(() => isBrowser ? /iPhone|iPad|iPod|Android/i.test(navigator.userAgent) : false);\n  const { data: savedItems = [], toggleSavedItem } = useSavedItems();\n  const { recordContact } = useContactHistory();\n  const { data: similarProducts = [], isLoading: loadingSimilar } = useSimilarProducts(id || '');\n  \n  // Use react-query to fetch product data\n  const { \n    data: product, \n    isLoading: loading, \n    error \n  } = useQuery({\n    queryKey: ['product', id],\n    queryFn: async () => {\n      if (!id) return null;\n      \n      // First check if the product exists\n      const { count, error: countError } = await supabase\n        .from('Products')\n        .select('Product_ID', { count: 'exact', head: true })\n        .eq('Product_ID', id);\n\n      if (countError) throw countError;\n      if (count === 0) return null;\n\n      // Fetch product data\n      const { data: productData, error: productError } = await supabase\n        .from('Products')\n        .select(`\n          Product_ID,\n          Product_Title,\n          Product_Price,\n          Product_Image_URL,\n          Product_URL,\n          Product_MOQ,\n          Product_Country_Name,\n          Product_Category_Name,\n          Product_Supplier_Name,\n          Product_Source_Name,\n          Product_Supplier_ID\n        `)\n        .eq('Product_ID', id)\n        .maybeSingle();\n\n      if (productError) throw productError;\n      if (!productData) return null;\n\n      // Track view\n      analytics.trackEvent('product_view', {\n        props: {\n          product_id: productData.Product_ID,\n          product_name: productData.Product_Title,\n          product_category: productData.Product_Category_Name,\n          product_country: productData.Product_Country_Name\n        }\n      });\n\n      return productData;\n    },\n    staleTime: 1000 * 60 * 5 // 5 minutes\n  });\n  \n  // Fetch supplier contact information\n  const { data: supplierContact } = useQuery({\n    queryKey: ['supplierContact', id],\n    queryFn: async () => {\n      if (!product?.Product_Supplier_ID) return null;\n      \n      const { data, error } = await supabase\n        .from('Supplier')\n        .select('Supplier_Email, Supplier_Whatsapp')\n        .eq('Supplier_ID', product.Product_Supplier_ID)\n        .maybeSingle();\n\n      if (error) throw error;\n      return data;\n    },\n    enabled: !!product?.Product_Supplier_ID,\n    staleTime: 1000 * 60 * 5 // 5 minutes\n  });\n  \n  // Format product data with supplier contact info\n  const formattedProduct = product ? {\n    id: product.Product_ID,\n    name: product.Product_Title,\n    Product_Price: product.Product_Price || '$0',\n    image: product.Product_Image_URL || '',\n    country: product.Product_Country_Name || 'Unknown',\n    category: product.Product_Category_Name || 'Unknown',\n    supplier: product.Product_Supplier_Name || 'Unknown',\n    supplierEmail: supplierContact?.Supplier_Email || '',\n    supplierWhatsapp: supplierContact?.Supplier_Whatsapp || '',\n    Product_MOQ: product.Product_MOQ || '0',\n    sourceUrl: product.Product_URL || '',\n    marketplace: product.Product_Source_Name || 'Unknown'\n  } : null;\n  \n  const isSaved = savedItems.some(item => item.id === formattedProduct?.id);\n\n  const handleShare = () => {\n    if (!formattedProduct) return;\n\n    const shareUrl = isBrowser ? window.location.href : '';\n    const shareText = `I found this product on Paisán.\\n\\n${formattedProduct.name}\\n\\n${shareUrl}`;\n\n    if (isMobile) {\n      // Use SMS sharing on mobile\n      window.location.href = `sms:?body=${encodeURIComponent(shareText)}`;\n    } else {\n      // Use email sharing on desktop\n      const subject = encodeURIComponent(`Check out this product on Paisán`);\n      window.location.href = `mailto:?subject=${subject}&body=${encodeURIComponent(shareText)}`;\n    }\n\n    analytics.trackEvent('product_share', {\n      props: {\n        product_id: formattedProduct.id,\n        product_name: formattedProduct.name,\n        share_method: isMobile ? 'sms' : 'email'\n      }\n    });\n  };\n\n  const handleSaveClick = async () => {\n    if (!formattedProduct) return;\n    \n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (!session) {\n        toast.error('Please log in to save items');\n        return;\n      }\n      \n      await toggleSavedItem(formattedProduct);\n      toast.success(isSaved ? 'Item removed from saved items' : 'Item saved successfully');\n      \n      analytics.trackEvent(isSaved ? 'item_unsaved' : 'item_saved', {\n        props: {\n          product_id: formattedProduct.id,\n          product_name: formattedProduct.name\n        }\n      });\n    } catch (error) {\n      console.error('Error saving item:', error);\n      toast.error('Failed to save item. Please try again.');\n    }\n  };\n\n  const handleContact = async (method: 'email' | 'whatsapp') => {\n    if (!formattedProduct) return;\n\n    try {\n      const { data: { session } } = await supabase.auth.getSession();\n      \n      if (!session) {\n        toast.error('Please log in to contact suppliers');\n        return;\n      }\n\n      await recordContact(formattedProduct.id, method);\n      \n      analytics.trackEvent('contact_supplier_click', {\n        props: {\n          product_id: formattedProduct.id,\n          product_name: formattedProduct.name,\n          supplier: formattedProduct.supplier,\n          contact_method: method\n        }\n      });\n    } catch (error) {\n      console.error('Error recording contact:', error);\n    }\n  };\n\n  const handleSourceLinkClick = () => {\n    if (!formattedProduct) return;\n\n    analytics.trackEvent('source_link_click', {\n      props: {\n        product_id: formattedProduct.id,\n        product_name: formattedProduct.name,\n        marketplace: formattedProduct.marketplace\n      }\n    });\n  };\n\n  if (loading || error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-[#F4A024]\">{error ? 'Error loading product' : 'Loading product...'}</div>\n      </div>\n    );\n  }\n\n  if (!formattedProduct) {\n    return (\n      <>\n        <SEO \n          title=\"Product Not Found\"\n          description=\"The requested product could not be found. Browse our other Latin American products.\"\n        />\n        <div className=\"min-h-screen flex items-center justify-center\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-bold text-gray-100\">Product not found</h2>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  const currentUrl = window.location.href;\n  const emailSubject = encodeURIComponent(formattedProduct.name);\n  const emailBody = encodeURIComponent(`Hello, I am interested in this product that you offer. I found the listing from Paisán:\\n\\n${formattedProduct.name}\\n${currentUrl}`);\n  const whatsappMessage = encodeURIComponent(`Hello, I am interested in this product that you offer. I found the listing from Paisán:\\n\\n${formattedProduct.name}\\n${currentUrl}`);\n\n  const getContactLink = () => {\n    if (formattedProduct.supplierEmail) {\n      return `mailto:${formattedProduct.supplierEmail}?subject=${emailSubject}&body=${emailBody}`;\n    } else if (formattedProduct.supplierWhatsapp) {\n      const whatsappNumber = formattedProduct.supplierWhatsapp.replace(/\\D/g, '');\n      return `https://wa.me/${whatsappNumber}?text=${whatsappMessage}`;\n    }\n    return '#';\n  };\n\n  const getContactText = () => {\n    if (formattedProduct.supplierEmail) {\n      return 'Contact Supplier via Email';\n    } else if (formattedProduct.supplierWhatsapp) {\n      return 'Contact Supplier via WhatsApp';\n    }\n    return 'Contact Supplier';\n  };\n\n  return (\n    <>\n      <SEO \n        title={formattedProduct.name}\n        description={`Buy ${formattedProduct.name} from ${formattedProduct.supplier}. ${formattedProduct.category} products from ${formattedProduct.country}. MOQ: ${formattedProduct.Product_MOQ} units.`}\n        keywords={`${formattedProduct.name}, ${formattedProduct.category}, ${formattedProduct.country}, ${formattedProduct.supplier}, wholesale, B2B, Latin American products`}\n        image={formattedProduct.image}\n        type=\"product\"\n      />\n      <div className=\"pt-24 pb-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <Breadcrumbs currentPageTitle={formattedProduct.name} />\n          \n          <div className=\"flex justify-end mb-4\">\n            <button\n              onClick={handleShare}\n              className=\"inline-flex items-center gap-2 font-bold text-[#F4A024] hover:text-[#F4A024]/80\"\n              title={`Share via ${isMobile ? 'SMS' : 'email'}`}\n            >\n              <Share2 className=\"w-5 h-5\" />\n              <span className=\"hidden sm:inline\">Share</span>\n            </button>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12\">\n            <div \n              className=\"aspect-square overflow-hidden rounded-lg bg-gray-800/50\"\n              data-tour=\"product-details\"\n            >\n              <img\n                src={formattedProduct.image}\n                alt={formattedProduct.name}\n                className=\"h-full w-full object-cover object-center\"\n              />\n            </div>\n\n            <div className=\"space-y-6\">\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-100\">{formattedProduct.name}</h1>\n                <div className=\"mt-2 flex items-center gap-3\">\n                  <p className=\"text-xl text-[#F4A024]\">{formattedProduct.Product_Price}</p>\n                  <span className=\"px-2 py-1 bg-gray-800 rounded-full text-sm text-gray-300\">\n                    {formattedProduct.category}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"space-y-4 text-gray-300\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-100\">Country</h3>\n                    <p className=\"mt-1\">{formattedProduct.country}</p>\n                  </div>\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-100\">Category</h3>\n                    <p className=\"mt-1\">{formattedProduct.category}</p>\n                  </div>\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-100\">MOQ</h3>\n                    <p className=\"mt-1\">{formattedProduct.Product_MOQ} units</p>\n                  </div>\n                  <div>\n                    <h3 className=\"text-sm font-medium text-gray-100\">Supplier</h3>\n                    <button\n                      onClick={() => {\n                        // We need to get the supplier ID first\n                        if (formattedProduct.supplierEmail || formattedProduct.supplierWhatsapp) {\n                          // If we have supplier contact info, we can fetch the supplier ID\n                          supabase\n                            .from('Supplier')\n                            .select('Supplier_ID')\n                            .eq('Supplier_Title', formattedProduct.supplier)\n                            .single()\n                            .then(({ data }) => {\n                              if (data) {\n                                navigate(createSupplierUrl(formattedProduct.supplier, data.Supplier_ID));\n                              }\n                            });\n                        }\n                      }}\n                      className=\"mt-1 text-left text-[#F4A024] hover:text-[#F4A024]\"\n                    >\n                      {formattedProduct.supplier}\n                    </button>\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"text-sm font-medium text-gray-100\">Original Source</h3>\n                  <a\n                    href={formattedProduct.sourceUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"mt-1 inline-flex items-center text-[#F4A024] hover:text-[#F4A024]\"\n                    onClick={handleSourceLinkClick}\n                  >\n                    View on {formattedProduct.marketplace}\n                    <ExternalLink className=\"w-4 h-4 ml-1\" />\n                  </a>\n                </div>\n              </div>\n\n              {(formattedProduct.supplierEmail || formattedProduct.supplierWhatsapp) && (\n                <div className=\"flex gap-4\">\n                  <a\n                    href={getContactLink()}\n                    className=\"btn-primary flex-1 py-3 text-center block\"\n                    data-tour=\"contact-supplier\"\n                    onClick={() => handleContact(formattedProduct.supplierEmail ? 'email' : 'whatsapp')}\n                    target={formattedProduct.supplierWhatsapp ? \"_blank\" : undefined}\n                    rel={formattedProduct.supplierWhatsapp ? \"noopener noreferrer\" : undefined}\n                  >\n                    {getContactText()}\n                  </a>\n                  <button\n                    onClick={handleSaveClick}\n                    className={`px-6 py-3 rounded-md transition-colors flex items-center justify-center gap-2 ${\n                      isSaved \n                        ? 'bg-gray-800 text-[#F4A024]' \n                        : 'bg-gray-800 text-gray-300 hover:text-[#F4A024]'\n                    }`}\n                  >\n                    <Bookmark className=\"w-5 h-5\" fill={isSaved ? 'currentColor' : 'none'} />\n                    <span className=\"sr-only\">{isSaved ? 'Remove from saved' : 'Save item'}</span>\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Similar Products Section */}\n          {similarProducts.length > 0 && (\n            <div className=\"mt-16\">\n              <h2 className=\"text-2xl font-bold text-gray-100 mb-8\">\n                Related Products\n              </h2>\n              <div className=\"grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\n                {similarProducts.map((product) => (\n                  <ProductCard key={product.id} product={product} />\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}"],"names":["error","toast","product"],"mappings":"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"}