{"version":3,"file":"Breadcrumbs-Ciuu5swn.js","sources":["../../../src/components/Breadcrumbs.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { ChevronRight } from 'lucide-react';\n\ninterface BreadcrumbsProps {\n  currentPageTitle: string;\n}\n\ninterface HistoryEntry {\n  path: string;\n  title: string;\n}\n\nexport default function Breadcrumbs({ currentPageTitle }: BreadcrumbsProps) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const [previousPage, setPreviousPage] = useState<HistoryEntry | null>(null);\n\n  useEffect(() => {\n    // Get history stack from sessionStorage\n    const historyStack = JSON.parse(sessionStorage.getItem('navigationHistory') || '[]') as HistoryEntry[];\n    \n    // Find the previous page (second to last entry)\n    if (historyStack.length > 1) {\n      setPreviousPage(historyStack[historyStack.length - 2]);\n    } else {\n      setPreviousPage(null);\n    }\n  }, [location.pathname]);\n\n  const handleLinkHover = (path: string) => {\n    // Prefetch data based on the path\n    if (path.startsWith('/product/')) {\n      const productId = path.split('/').pop();\n      if (productId) {\n        queryClient.prefetchQuery({\n          queryKey: ['product', productId],\n          queryFn: async () => {\n            const { data } = await supabase\n              .from('Products')\n              .select('*')\n              .eq('Product_ID', productId)\n              .single();\n            return data;\n          }\n        });\n      }\n    } else if (path.startsWith('/search')) {\n      const params = new URLSearchParams(path.split('?')[1]);\n      const category = params.get('category');\n      const query = params.get('q');\n      \n      if (category) {\n        queryClient.prefetchQuery({\n          queryKey: ['searchResults', { category }],\n          queryFn: async () => {\n            const { data } = await supabase\n              .from('Products')\n              .select('*')\n              .eq('Product_Category_ID', category)\n              .limit(20);\n            return data;\n          }\n        });\n      } else if (query) {\n        // Prefetch search results\n        queryClient.prefetchQuery({\n          queryKey: ['searchResults', { query }],\n          queryFn: async () => {\n            const searchResults = await productsIndex.search(query, {\n              limit: 20\n            });\n            return searchResults.hits;\n          }\n        });\n      }\n    }\n  };\n\n  const handlePreviousClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    navigate(-1);\n  };\n\n  if (!previousPage) {\n    return (\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-100\">{currentPageTitle}</h1>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mb-8\">\n      <div className=\"flex items-center text-sm mb-2\">\n        <Link\n          to=\"#\"\n          onMouseEnter={() => previousPage && handleLinkHover(previousPage.path)}\n          onClick={handlePreviousClick}\n          className=\"text-[#F4A024] hover:text-[#F4A024]/80 font-medium\"\n        >\n          {previousPage.title}\n        </Link>\n        <ChevronRight className=\"w-4 h-4 mx-2 text-gray-500\" />\n        <span className=\"text-gray-300\">{currentPageTitle}</span>\n      </div>\n      <h1 className=\"text-3xl font-bold text-gray-100\">{currentPageTitle}</h1>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAcA,SAAwB,YAAY,EAAE,oBAAsC;AAC1E,QAAM,WAAW,YAAA;AACjB,QAAM,WAAW,YAAA;AACjB,QAAM,cAAc,eAAA;AACpB,QAAM,CAAC,cAAc,eAAe,IAAI,SAA8B,IAAI;AAE1E,YAAU,MAAM;AAEd,UAAM,eAAe,KAAK,MAAM,eAAe,QAAQ,mBAAmB,KAAK,IAAI;AAGnF,QAAI,aAAa,SAAS,GAAG;AAC3B,sBAAgB,aAAa,aAAa,SAAS,CAAC,CAAC;AAAA,IAAA,OAChD;AACL,sBAAgB,IAAI;AAAA,IAAA;AAAA,EACtB,GACC,CAAC,SAAS,QAAQ,CAAC;AAEtB,QAAM,kBAAkB,CAAC,SAAiB;AAExC,QAAI,KAAK,WAAW,WAAW,GAAG;AAChC,YAAM,YAAY,KAAK,MAAM,GAAG,EAAE,IAAA;AAClC,UAAI,WAAW;AACb,oBAAY,cAAc;AAAA,UACxB,UAAU,CAAC,WAAW,SAAS;AAAA,UAC/B,SAAS,YAAY;AACnB,kBAAM,EAAE,KAAA,IAAS,MAAM,SACpB,KAAK,UAAU,EACf,OAAO,GAAG,EACV,GAAG,cAAc,SAAS,EAC1B,OAAA;AACH,mBAAO;AAAA,UAAA;AAAA,QACT,CACD;AAAA,MAAA;AAAA,IACH,WACS,KAAK,WAAW,SAAS,GAAG;AACrC,YAAM,SAAS,IAAI,gBAAgB,KAAK,MAAM,GAAG,EAAE,CAAC,CAAC;AACrD,YAAM,WAAW,OAAO,IAAI,UAAU;AACtC,YAAM,QAAQ,OAAO,IAAI,GAAG;AAE5B,UAAI,UAAU;AACZ,oBAAY,cAAc;AAAA,UACxB,UAAU,CAAC,iBAAiB,EAAE,UAAU;AAAA,UACxC,SAAS,YAAY;AACnB,kBAAM,EAAE,KAAA,IAAS,MAAM,SACpB,KAAK,UAAU,EACf,OAAO,GAAG,EACV,GAAG,uBAAuB,QAAQ,EAClC,MAAM,EAAE;AACX,mBAAO;AAAA,UAAA;AAAA,QACT,CACD;AAAA,MAAA,WACQ,OAAO;AAEhB,oBAAY,cAAc;AAAA,UACxB,UAAU,CAAC,iBAAiB,EAAE,OAAO;AAAA,UACrC,SAAS,YAAY;AACnB,kBAAM,gBAAgB,MAAM,cAAc,OAAO,OAAO;AAAA,cACtD,OAAO;AAAA,YAAA,CACR;AACD,mBAAO,cAAc;AAAA,UAAA;AAAA,QACvB,CACD;AAAA,MAAA;AAAA,IACH;AAAA,EACF;AAGF,QAAM,sBAAsB,CAAC,MAAwB;AACnD,MAAE,eAAA;AACF,aAAS,EAAE;AAAA,EAAA;AAGb,MAAI,CAAC,cAAc;AACjB,WACE,oBAAC,SAAI,WAAU,QACb,8BAAC,MAAA,EAAG,WAAU,oCAAoC,UAAA,iBAAA,CAAiB,EAAA,CACrE;AAAA,EAAA;AAIJ,SACE,qBAAC,OAAA,EAAI,WAAU,QACb,UAAA;AAAA,IAAA,qBAAC,OAAA,EAAI,WAAU,kCACb,UAAA;AAAA,MAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,cAAc,MAAM,gBAAgB,gBAAgB,aAAa,IAAI;AAAA,UACrE,SAAS;AAAA,UACT,WAAU;AAAA,UAET,UAAA,aAAa;AAAA,QAAA;AAAA,MAAA;AAAA,MAEhB,oBAAC,cAAA,EAAa,WAAU,6BAAA,CAA6B;AAAA,MACrD,oBAAC,QAAA,EAAK,WAAU,iBAAiB,UAAA,iBAAA,CAAiB;AAAA,IAAA,GACpD;AAAA,IACA,oBAAC,MAAA,EAAG,WAAU,oCAAoC,UAAA,iBAAA,CAAiB;AAAA,EAAA,GACrE;AAEJ;"}